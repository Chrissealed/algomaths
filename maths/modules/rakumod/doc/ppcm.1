.\" Automatically generated by Pandoc 2.1.2
.\"
.TH "" "" "" "" ""
.hy
.SH NAME
.PP
class PPCM in \f[B]algomaths\f[] Perl6 modules :
maths/modules/pm6/\f[B]ppcm.pm6\f[]
.SH AUTHOR
.PP
https://github.com/Chrissealed/algomaths.git
.SH VERSION
.PP
2018.12.16
.SH Ce module contient une classe : PPCM qui dispose du rôle
`PrimeFactors' et qui utilise les classes ArePrime et PGCD.
.PP
Cette classe comporte deux attributs requis : \f[B]integer1\f[] et
\f[B]integer2\f[], qui sont des entiers différents de 0 qui seront
utilisés par les méthodes de la classe et un attribut facultatif de type
\f[B]Str\f[] qui peut prendre l'une des valeurs suivantes :
.IP \[bu] 2
\f[B]euclide\f[] ou \f[B]e\f[] ou \f[B]:\f[] ou \f[B]÷\f[];
.IP \[bu] 2
\f[B]subtraction\f[] ou \f[B]s\f[] ou \f[B]\-\f[] ou \f[B]−\f[];
.IP \[bu] 2
\f[B]factorization\f[] ou \f[B]f\f[] ou ***** ou \f[B]×\f[] et
.IP \[bu] 2
\f[B]divisors\-listing\f[] ou \f[B]d\f[] ou \f[B]#\f[] ou \f[B]/\f[].
.PP
Sa valeur par défaut est \f[B]euclide\f[]; cet algorithme est utilisé
par l'une des méthodes du module \f[B]prime\-factors.pm6\f[] :
.IP \[bu] 2
\f[B]have\-common\-divisor($pgcd\-algorithm)\f[].
.PP
La classe \f[B]PrimeFactors\f[] contient trois méthodes distinctes pour
calculer le PPCM (plus petit commun multiple) de deux entiers :
.IP \[bu] 2
\f[B]by\-larger\-number\-multiples\f[](\[en]> Int) qui procède par
additions du plus grand nombre et division du résultat par le plus petit
nombre.
Elle retourne le PPCM recherché qui est donc un entier.
.IP \[bu] 2
\f[B]by\-prime\-factors\f[](\[en]> Int) qui procède par décomposition
des nombres en facteurs premiers et qui utilise pour cela la méthode
\f[B]breakdown\f[] du module \f[B]prime\-factors\f[] dont la classe a le
rôle.
Cette méthode dispose d'un tableau des facteurs extraits des deux
nombres qu'elle multiplie pour obtenir le PPCM recherché et retourné.
.IP \[bu] 2
\f[B]by\-use\-of\-pgcd\f[](\[en]>Int) qui comme son nom l'indique
recherche d'abord le PGCD des deux entiers avant de diviser leur
multiple par celui\-ci, le résultat étant le PPCM recherché,
c'est\-à\-dire un entier en valeur de retour comme l'indiquent les
signatures de ces méthodes.
.PP
Le rôle \f[B]PrimeFactors\f[] possède en outre un attribut requis
destiné à écrire dans un fichier les informations qui apparaissent à
l'écran et qui décrivent les différentes étapes des opérations.
Il s'agit de \f[B]Teeput::Tput $t is required is rw\f[] : il faut lui
passer un objet de type \f[B]Teeput::Tput\f[] du module
\f[B]teeput.pm6\f[].
Référez\-vous à la doc de ce module pour plus d'informations.
